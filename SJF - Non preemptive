#include <stdio.h>
int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    // arrival time and burst time
    int at[n], bt[n], i;
    for(i=0; i<n; i++) {
        printf("Enter the arrival time of P%d: ", i+1);
        scanf("%d", &at[i]);
        printf("Enter the burst time of P%d: ", i+1);
        scanf("%d", &bt[i]);
    }

    // completion time
    int done[n], time=0, ct[n], tat[n], wt[n];
    int completed = 0;
    float atat = 0, awt = 0;

    for(i=0; i<n; i++) done[i] = 0; // শুরুতে সব process অসম্পন্ন

    while(completed < n) {
        int index = -1;
        int min_bt = 9999;

        // সবচেয়ে ছোট burst time এর ready process খুঁজে বের করা
        for(i=0; i<n; i++) {
            if(!done[i] && at[i] <= time && bt[i] < min_bt) {
                min_bt = bt[i];
                index = i;
            }
        }

        if(index == -1) {
            time++; // কোনো প্রক্রিয়া আসেনি, CPU idle
        } else {
            time += bt[index];
            ct[index] = time;
            tat[index] = ct[index] - at[index];
            wt[index] = tat[index] - bt[index];

            atat += tat[index];
            awt += wt[index];

            done[index] = 1;
            completed++;
        }
    }

    atat /= n;
    awt /= n;

    printf("\nProcess\tAT\tBT\tCT\tTAT\tWT\n");
    for(i=0; i<n; i++) {
        printf("P%d\t%d\t%d\t%d\t%d\t%d\n", i+1, at[i], bt[i], ct[i], tat[i], wt[i]);
    }
    printf("\nAverage Turnaround Time = %.2f", atat);
    printf("\nAverage Waiting Time = %.2f\n", awt);

    return 0;
}
